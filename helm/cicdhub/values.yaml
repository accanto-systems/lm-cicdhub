## Global settings 
global:
  ldap:
    ## LDAP's manager password
    managerPassword: admin
    ## LDAP's domain
    domain: lm.com

## Helper to create Persistence Volumes based for the foundation services with persistence.enabled
## The volumes will created using the hostPath type (https://kubernetes.io/docs/concepts/storage/volumes/#hostpath)
## meaning they will mount local volumes on the host
## Therefore, they should only be used in single node Kubernetes deployments for testing purposes 
## Each volume will be tailored towards the size requirements, specified by the values, of each foundation service requiring persistence
## E.g. a volume will be created with size equal to the cassandra.persistence.size value
## When enabling this value you must configure the storageClass for each service to values shown in a comment above field in this file
volumesInit:
  enabled: false
  ## The directory on the host where volumes will be created. It is important that the user running kubernetes has read/write access to this directory
  hostPath: /var/cicdhub

nexus:
  enabled: true
  replicaCount: 1
  statefulset:
    enabled: true
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: nexus-storage if using local volumes created by volumesInit
    storageClass: managed-nfs-storage
    storageSize: 100Gi
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      # allow request payloads of any size
      nginx.ingress.kubernetes.io/proxy-body-size: 0
    tls:
      enabled: false
  nexusProxy:
    enabled: false
  nodePort: 32739

gogs:
  enabled: true
  service:
    httpNodePort: 32734
    gogs:
      serviceEnableCaptcha: false
      repositoryUploadMaxFileSize: 10000
    ingress:
      enabled: false
      hosts:
      - git.cicdhub
      annotations:
        # allow request payloads of any size
        nginx.ingress.kubernetes.io/proxy-body-size: 0
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: gogs-storage if using local volumes created by volumesInit
    storageClass: managed-nfs-storage
    size: 1Gi
  postgresql:
    enabled: true
    install: true
    postgresUser: admin
    postgresPassword: admin
    persistence:
      enabled: true
      ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
      ## Use storageClass: postgresql-storage if using local volumes created by volumesInit
      storageClass: managed-nfs-storage
      accessModes:
      - ReadWriteOnce
      size: 5Gi

jenkins:
  enabled: true
  master:
    imageTag: 2.243
    serviceType: NodePort
    nodePort: 32732
    ingress:
      enabled: false
      hostName: jenkins.cicdhub
    adminUser: admin
    adminPassword: admin
    numExecutors: 2
    cli: true
    # Plugins list provided to prevent "latest" versions being installed which may be incompatible with this version of Jenkins 
    installPlugins:
      - apache-httpcomponents-client-4-api:4.5.10-2.0
      - authentication-tokens:1.3
      - bouncycastle-api:2.16.0
      - branch-api:2.5.4
      - command-launcher:1.0
      - credentials-binding:1.19
      - credentials:2.3.0
      - display-url-api:2.3.2
      - docker-commons:1.15
      - docker-workflow:1.21
      - durable-task:1.33
      - cloudbees-folder:6.9
      - git:3.10.0
      - git-client:2.9.0
      - git-server:1.8
      - gogs-webhook:1.0.15
      - jackson2-api:2.10.0
      - ace-editor:1.1
      - handlebars:1.1.1
      - jquery-detached:1.2.1
      - momentjs:1.1.1
      - jsch:0.1.55.1
      - junit:1.28
      - kubernetes:1.16.0
      - kubernetes-credentials:0.7.0
      - kubernetes-client:4.9.2-1
      - lockable-resources:2.6
      - mailer:1.29
      - matrix-project:1.14
      - jdk-tool:1.0
      - workflow-aggregator:2.6
      - pipeline-graph-analysis:1.10
      - workflow-api:2.37
      - workflow-basic-steps:2.18
      - pipeline-build-step:2.9
      - pipeline-model-definition:1.3.9
      - pipeline-model-declarative-agent:1.1.1
      - pipeline-model-extensions:1.3.9
      - workflow-cps:2.74
      - pipeline-input-step:2.11
      - workflow-job:2.32
      - pipeline-milestone-step:1.3.1
      - pipeline-model-api:1.3.9
      - workflow-multibranch:2.21
      - workflow-durable-task-step:2.34
      - pipeline-rest-api:2.12
      - workflow-scm-step:2.9
      - workflow-cps-global-lib:2.15
      - pipeline-stage-step:2.3
      - pipeline-stage-tags-metadata:1.3.9
      - pipeline-stage-view:2.12
      - workflow-step-api:2.20
      - workflow-support:3.3
      - plain-credentials:1.5
      - scm-api:2.6.3
      - script-security:1.66
      - ssh-credentials:1.17.3
      - structs:1.20
      - trilead-api:1.0.3
      - variant:1.3
  persistence:
    enabled: true
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: jenkins-storage if using local volumes created by volumesInit
    storageClass: managed-nfs-storage
    size: 2Gi

## Openldap is an optional dependency for LM. An LDAP server is required when security is enabled, for user management. 
## Openldap is the out-of-the-box recommendation. 
## Full documentation for the values allowed in this section can be found at: https://github.com/helm/charts/tree/master/stable/openldap
## Note: remember to locate the version of the Openldap helm chart in use by viewing the requirements.yaml file of helm-foundation      
openldap:
  enabled: false
  replicaCount: 1
  persistence:
    enabled: true
    size: "10Gi"
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: openldap-storage if using local volumes created by volumesInit
    storageClass: managed-nfs-storage
  existingSecret: openldap-config
  env:
    LDAP_ORGANISATION: "lm"
    LDAP_BACKEND: "lm"
    LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  ldapPort: 389
  sslLdapPort: 636
  service:
    type: NodePort
    nodePort: 32737
    sslNodePort: 32738

## Recommended container for auto-configuring Openldap with LM defaults. Only used when openldap.enabled
openldapInit:
  enabled: true

## Installs the nginx-ingress controller to enable access to services
nginx-ingress:
  enabled: false
  controller:
    service:
      type: NodePort
      nodePorts:
        http: 32080 
        https: 32443

dockerregistry:
  enabled: false
  replicaCount: 1
  persistence:
    enabled: true
    deleteEnabled: true
    size: 150Gi
    ## Customise the storage class. Leave undefined to use the default on the kubernetes cluster
    ## Use storageClass: docker-registry-storage if using local volumes created by volumesInit
    storageClass: managed-nfs-storage
  service:
    type: NodePort
    nodePort: 32736
